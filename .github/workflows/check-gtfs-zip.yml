- name: Check secret presence
  shell: bash
  run: |
    if [[ -z "${GTFS_STATIC_ZIP_URL:-}" ]]; then
      echo "GTFS_STATIC_ZIP_URL secret is EMPTY or not available to this workflow."
      echo "Check: Settings > Secrets and variables > Actions > Repository secrets"
      exit 1
    fi

- name: GET check (status & content-type)
  shell: bash
  run: |
    set -euo pipefail
    curl -fsSL -D headers.txt -o /dev/null "$GTFS_STATIC_ZIP_URL" || {
      echo "GET failed. Capturing error body..."
      curl -sS -D headers.txt "$GTFS_STATIC_ZIP_URL" -o error_body.txt || true
      sed -E 's/(acl:consumerKey=)[^& ]+/\1***MASKED***/g' headers.txt || true
      echo "--- error body (masked) ---"
      sed -E 's/(acl:consumerKey=)[^& ]+/\1***MASKED***/g' error_body.txt || true
      exit 1
    }

    echo "--- response headers (masked) ---"
    sed -E 's/(acl:consumerKey=)[^& ]+/\1***MASKED***/g' headers.txt

    STATUS=$(awk 'NR==1{print $2}' headers.txt)
    CTYPE=$(awk 'tolower($1)=="content-type:"{print tolower($2)}' headers.txt | tr -d '\r')

    if [[ "$STATUS" != "200" ]]; then
      echo "Unexpected HTTP status: $STATUS"; exit 1
    fi
    if [[ "$CTYPE" != application/zip* && "$CTYPE" != application/octet-stream* ]]; then
      echo "Unexpected Content-Type: $CTYPE"; exit 1
    fi
    echo "OK: $STATUS / $CTYPE"
